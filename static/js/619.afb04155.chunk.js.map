{"version":3,"file":"static/js/619.afb04155.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withRouter.js"],"sourcesContent":["import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"profile__status-wrap\">\r\n                {!this.state.editMode &&\r\n                    <div className=\"profile__status\">\r\n                        <span onDoubleClick={this.activateEditMode}> {this.props.status || \"----\"}</span>\r\n\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}\r\n                           className=\"profile__input\" type=\"text\" value={this.state.status}/>\r\n                }\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default ProfileStatus","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    return (\r\n        <div className=\"profile__status-wrap\">\r\n            {!editMode &&\r\n                <div className=\"profile__status\">\r\n                    <span onDoubleClick={activateEditMode}> {props.status || \"----\"}</span>\r\n\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <input autoFocus={true} onChange={onStatusChange}\r\n                       className=\"profile__input\" type=\"text\" onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","//import avatar from \"../../../images/avatar/1.png\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport UserImg from \"../../../images/avatar/2.jpg\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (props.profile == null) {\r\n        return <Preloader/>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"profile__top box\">\r\n            <div className=\"profile__img-wrap\">\r\n                <img className=\"profile__img\"\r\n                     src={props.profile.photos.large != null ? props.profile.photos.large : UserImg} alt=\"avatar\"\r\n                     width=\"100\"\r\n                     height=\"100\"/>\r\n            </div>\r\n            <div className=\"profile__info\">\r\n                <div className=\"profile__name\">\r\n                    {props.profile.fullName}\r\n                </div>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                <ul className=\"profile__info-list\">\r\n                    <li className=\"profile__date\">\r\n                        <span>Дата рождения:</span>\r\n                        <span> 1 октября</span>\r\n                    </li>\r\n                    <li className=\"profile__city\">\r\n                        <span>Город: </span>\r\n                        <span>Оренбург</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import avatar from \"../../../../images/avatar/1.png\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n\r\n        <li className=\"posts__list-item box\">\r\n            <div className=\"posts__list-item-top\">\r\n                <div className=\"posts__list-img-wrap\">\r\n                    <img className=\"posts__list-img\" src={avatar} alt=\"avatar\" width=\"50\" height=\"50\" />\r\n                </div>\r\n                <div className=\"posts__list-text\">\r\n                    {props.message}\r\n                </div>\r\n            </div>\r\n            <div className=\"posts__list-item-bottom\">\r\n                <span>Лайков:</span>\r\n                <span>{props.likesCount}</span>\r\n            </div>\r\n        </li>\r\n\r\n);\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport Post from \"./Post/Post\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {requiredField} from \"../../../utils/validators/validator\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElements = props.posts.map((m) => <Post\r\n        key={m.id} message={m.message} likesCount={m.likesCount}/>);\r\n\r\n\r\n    return (\r\n        <div className=\"profile__posts posts\">\r\n            <div className=\"posts__new box\">\r\n                <div className=\"posts__new-title\">\r\n                    Мои посты\r\n                </div>\r\n\r\n                <FormsMyPosts addPost={props.addPost}/>\r\n\r\n            </div>\r\n            <ul className=\"posts__list\">\r\n                {postsElements}\r\n            </ul>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst FormsMyPosts = (props) => {\r\n\r\n    const { register, handleSubmit, reset  } = useForm();\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        props.addPost(data.newMessagePost);\r\n        reset({\r\n            newMessagePost: '',\r\n        })\r\n    };\r\n\r\n    return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n         <textarea\r\n                   className=\"posts__input\"\r\n                   placeholder='Введите сообщение'\r\n                   {...register(\"newMessagePost\", requiredField)}/>\r\n        <button className=\"posts__btn btn\">\r\n            Опубликовать\r\n        </button>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","//import React from 'react';\r\nimport {addPostAC} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        addPost: (newMessagePost) => {\r\n            dispatch(addPostAC(newMessagePost));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"../../hoc/withRouter\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    redirectToMainUser() {\r\n        // let userId = this.props.match.params.userId;\r\n        // if (!userId) {\r\n        //     userId = this.props.authorizedUserId;\r\n        //     if (!userId) {\r\n        //         //userId = 2222;\r\n        //         this.props.match.navigate(\"/login\")\r\n        //     }\r\n        // }\r\n        //\r\n        //\r\n        // this.props.getUserProfile(userId)\r\n        // this.props.getStatus(userId)\r\n\r\n        let userId = this.props.authorizedUserId;\r\n        if (userId) {\r\n            this.props.getUserProfile(userId)\r\n            this.props.getStatus(userId)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n\r\n            }\r\n        }\r\n\r\n        if (userId) {\r\n            this.props.getUserProfile(userId)\r\n            this.props.getStatus(userId)\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n        if (this.props.isMain !== prevProps.isMain) {\r\n            if (this.props.isMain) {\r\n                this.redirectToMainUser();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        if (!this.props.isAuth && !this.props.match.params.userId) {\r\n            return <Navigate to={\"/login\"}/>\r\n        }\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n)(ProfileContainer)","import {useParams} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { useLocation, useNavigate} from \"react-router-dom\";\r\n\r\n\r\nexport const withRouter = (Component) => {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                match={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n    return ComponentWithRouterProp;\r\n}"],"names":["React","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","onDoubleClick","autoFocus","onChange","e","currentTarget","value","type","onBlur","updateStatus","profile","Preloader","src","photos","large","UserImg","alt","width","height","fullName","avatar","message","likesCount","MyPosts","postsElements","posts","map","m","id","FormsMyPosts","addPost","useForm","register","handleSubmit","reset","onSubmit","data","newMessagePost","placeholder","requiredField","connect","state","profilePage","dispatch","addPostAC","ProfileContainer","userId","this","authorizedUserId","getUserProfile","getStatus","match","params","prevProps","isMain","redirectToMainUser","isAuth","to","compose","auth","withRouter","Component","location","useLocation","navigate","useNavigate","useParams"],"sourceRoot":""}